@startuml backend_package_diagram
!theme C4_blue from https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/themes
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
LAYOUT_WITH_LEGEND()
title Package Diagram for App Mobile (Back-End)

Container_Boundary(backend, "Backend API") {
  package "Controllers" {
    Component(userController, "UserController", "MVC REST controller", "Rotas relacionadas ao usuário")
    Component(goalsController, "GoalsController", "MVC REST controller", "Rotas relacionadas às metas")
    Component(notificationController, "NotificationController", "MVC REST controller", "Rotas de notificações")
    Component(locationsController, "LocationsController", "MVC REST controller", "Rotas de localização")
  }
  package "Services" {
    Component(userService, "UserService", "Application service", "Lógica de usuário")
    Component(goalsService, "GoalsService", "Application service", "Lógica de metas")
    Component(notificationService, "NotificationService", "Application service", "Lógica de notificações")
    Component(locationsService, "LocationsService", "Application service", "Lógica de ecopontos")
  }
  package "Repositories" {
    Component(userRepo, "UserRepository", "MongoDB repository", "Opera sobre coleção de usuários")
    Component(goalsRepo, "GoalsRepository", "MongoDB repository", "Opera sobre coleção de metas")
    Component(notificationRepo, "NotificationRepository", "MongoDB repository", "Opera sobre coleção de notificações")
    Component(locationsRepo, "LocationsRepository", "MongoDB repository", "Opera sobre coleção de localizações")
  }
  package "Domain Models" {
    Component(userModel, "User", "Domain entity", "Usuário")
    Component(goalModel, "Goal", "Domain entity", "Meta de consumo")
    Component(notificationModel, "Notification", "Domain entity", "Notificação")
    Component(locationModel, "Location", "Domain entity", "Ecoponto")
  }
  package "Config & External" {
    Component(dbConfig, "DatabaseConfig", "Config & util", "Conexão MongoDB")
    Component(msgConfig, "MessagingConfig", "Config & util", "FCM / APNs")
    System_Ext(pns, "PNS (FCM/APNs)", "Sistema de push")
  }
}

ContainerDb(db, "Banco de Dados", "MongoDB", "Armazena as coleções de dados", $sprite="mongodb")

userController --> userService : "usa"
goalsController --> goalsService : "usa"
notificationController --> notificationService : "usa"
locationsController --> locationsService : "usa"

userService --> userRepo : "usa"
goalsService --> goalsRepo : "usa"
notificationService --> notificationRepo : "usa"
locationsService --> locationsRepo : "usa"

userRepo --> db : "Driver MongoDB"
goalsRepo --> db : "Driver MongoDB"
notificationRepo --> db : "Driver MongoDB"
locationsRepo --> db : "Driver MongoDB"

notificationService --> pns : "envia push"

@enduml