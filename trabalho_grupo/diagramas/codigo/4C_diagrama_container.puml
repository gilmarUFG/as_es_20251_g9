@startuml container

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

LAYOUT_WITH_LEGEND()

title Container Diagram for Sustainable Habits Application

Person(user, "Usuário", "Pessoa física que utiliza o aplicativo para gerenciar seus hábitos sustentáveis e acessar informações.")

System_Ext(municipal_systems, "Sistemas Municipais", "Sistemas externos que podem fornecer informações sobre pontos de coleta em determinado município.")
System_Ext(map_apis, "APIs de Mapas", "APIs de terceiros (e.g., Google Maps) para geolocalização e exibição de pontos de coleta.")
System_Ext(os_notification_service, "Serviço de Notificação do SO", "Serviço do sistema operacional para exibição de notificações.")
System_Ext(os_theme_settings, "Configurações de Tema do SO", "Configurações do sistema operacional para o tema (modo claro/escuro).")
System_Ext(screen_readers, "Leitores de Tela", "Softwares de acessibilidade (e.g., TalkBack, VoiceOver) para leitura de conteúdo.")
System_Ext(prometheus, "Prometheus", "Sistema de monitoramento que coleta métricas da aplicação.")
System_Ext(grafana, "Grafana", "Ferramenta de visualização para as métricas coletadas pelo Prometheus.")
System_Ext(ecommerce_platforms, "Plataformas de e-commerce de Produtos Sustentáveis", "Sistemas externos que vendem produtos sustentáveis.")


System_Boundary(app, "Aplicativo de Hábitos Sustentáveis") {
    Container(mobile_app, "Aplicativo Mobile", "React Native", "Permite que o usuário interaja com as funcionalidades da aplicação: configuração de metas e lembretes, visualização de guias interativos, localização de pontos de coleta, interação em fórum, visualização de ranking, registro de práticas e acompanhamento de gamificação, com feedback visual/sonoro e indicadores de progresso e impacto.")
    Container(backend_api, "Backend API", "Node.js", "Fornece a lógica de negócios e gerencia dados de usuários, metas, lembretes, dicas, informações de fórum, ranking e gamificação (pontos, recompensas, conquistas, desafios, streaks). Responsável pela integração com sistemas externos (municipais, mapas, e-commerce) e gerenciamento de questões relacionadas às notificações. Implementa moderação de conteúdo para o fórum e atualiza o ranking. Expõe métricas para monitoramento de disponibilidade. Servidor hospedado na nuvem (Google Cloud).")
    ContainerDb(database, "Banco de Dados", "MongoDB", "Armazena dados do usuário, metas, lembretes, ecopontos, conteúdo do guia interativo, posts, curtidas, respostas, pontos, recompensas, conquistas, desafios, streaks, etc. Servidor hospedado na nuvem (Google Cloud).")
}

Rel(user, mobile_app, "Utiliza")
Rel(mobile_app, backend_api, "Requisita informações", "HTTPS/JSON")
Rel(backend_api, database, "Lê e escreve dados", "Driver Oficial MongoDB/Mongoose")
Rel(backend_api, municipal_systems, "Requisita informações", "HTTPS/JSON")
Rel(backend_api, map_apis, "Requisita informações", "HTTPS/JSON")
Rel(backend_api, os_notification_service, "Dispara mensagens push", "Firebase Cloud Messaging/APNs")
Rel(backend_api, ecommerce_platforms, "Requisita informações", "HTTPS/JSON, RESTful, Autenticação Segura")

Rel(mobile_app, os_notification_service, "Exibe notificações")
Rel(mobile_app, os_theme_settings, "Consulta e lê")
Rel(mobile_app, screen_readers, "Fornece informações acessíveis para")

Rel(prometheus, backend_api, "Coleta métricas via endpoint/metrics", "HTTPS/JSON")
Rel(grafana, prometheus, "Consulta métricas")

@enduml
